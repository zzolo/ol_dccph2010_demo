<?php
// $Id$

/**
 * @file
 * Main OpenLayers Demo File
 *
 * This file holds the main Drupal hook functions,
 * for the OpenLayers demo module.
 *
 * @ingroup openlayers
 */

/**
 * Implements hook_help().
 */
function ol_dccph2010_demo_help($path, $arg) {
  switch ($path) {
    case 'admin/help#ol_dccph2010_demo':
      $output = '<p>'. t('A module to help with OpenLayers Demo for
        DrupalCon Copenhagen 2010.') .'</p>';
        
    case 'admin/settings/ol_dccph2010_demo':
      $output = '<p>'. t('The following are settings for the OpenLayers
        Demo module.') .'</p>';
  }
  return '';
}

/**
 * Implements hook_menu().
 */
function ol_dccph2010_demo_menu() {
  $items = array();
  $items['admin/settings/ol_dccph2010_demo'] = array(
    'title' => 'OpenLayers Demo',
    'description' => 'Settings for the OpenLayers Demo.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ol_dccph2010_demo_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/ol_dccph2010_demo.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_ctools_plugin_api().
 */
function ol_dccph2010_demo_ctools_plugin_api($module, $api) {
  if ($module == "openlayers") {
    switch ($api) {
      case 'openlayers_layers':
        return array('version' => 1);

    }
  }
}

/**
 * Implements hook_openlayers_layer_types().
 */
function ol_dccph2010_demo_openlayers_layer_types() {
  // This is a custom OSM layer minimalized so that local
  // tiles can be served.  Shoudl go upstream, but time does 
  // not allow at the moment.
  return array(
    'openlayers_layer_type_osm_custom' => array(
      'title' => t('OSM Custom'),
      'description' => t('A layer type for OpenStreetMap tiles (customized for this demo), which is essentially a focused implementation of the XYZ layer type.'),
      'layer_type' => array(
        'path' => drupal_get_path('module', 'ol_dccph2010_demo') . '/includes/layer_types',
        'file' => 'osm_custom.inc',
        'class' => 'openlayers_layer_type_osm_custom',
        'parent' => 'openlayers_layer_type',
      ),
    ),
    'openlayers_layer_type_georss_custom' => array(
      'title' => t('GeoRSS Custom'),
      'description' => t('A layer type for GeoRSS feeds.'),
      'layer_type' => array(
        'path' => drupal_get_path('module', 'ol_dccph2010_demo') . '/includes/layer_types',
        'file' => 'georss_custom.inc',
        'class' => 'openlayers_layer_type_georss_custom',
        'parent' => 'openlayers_layer_type',
      ),
    ),
  );
}

/**
 * Implements hook_openlayers_layers().
 */
function ol_dccph2010_demo_openlayers_layers() {
  $layers = array();

  // OpenStreetMap Mapnik
  $layer = new stdClass();
  $layer->api_version = 1;
  $layer->name = 'ol_dccph2010_demo_osm_mapnik';
  $layer->title = 'OL Demo > OSM Mapnik';
  $layer->description = 'A Custom OSM Mapnik layer';
  $layer->data = array(
    'baselayer' => TRUE,
    'projection' => array('900913'),
    'layer_type' => 'openlayers_layer_type_osm_custom',
    'url' => 'http://tile.openstreetmap.org/${z}/${x}/${y}.png',
  );

  // In order to support local tiles, we have a switch here.
  if ($url = variable_get('ol_dccph2010_demo_local_osm_layer', '')) {
    $layer->data['url'] = $url;
  }

  $layers[$layer->name] = $layer;
  return $layers;
}

/**
 * Load some nodes.
 */
function ol_dccph2010_demo_load_data() {
  // Some meaningful sample data (instead of random values with
  // Devel generate).
  
  // Bella Center
  $node = new stdClass();
  $node->type = 'ol_demo_poi';
  $node->uid = 1;
  $node->status = 1;
  $node->title = 'DrupalCon Copenhagen Bella Center';
  $node->body = '<a href="http://cph2010.drupal.org/">DrupalCon Copenhagen 2010</a> will be held at the Bella Center.';
  $node->teaser = '<a href="http://cph2010.drupal.org/">DrupalCon Copenhagen 2010</a> will be held at the Bella Center.';
  $node->field_ol_demo_location = array(
    0 => array(
      'openlayers_wkt' => 'GEOMETRYCOLLECTION(POINT(12.57986068676 55.638219024316))',
    ),
  );
  $results = node_save($node);
  drupal_set_message(t('Bella Center node created.'));
  
  // ChX Coders Lounge (Republikken)
  $node = new stdClass();
  $node->type = 'ol_demo_poi';
  $node->uid = 1;
  $node->status = 1;
  $node->title = 'Republikken';
  $node->body = 'The <a href="http://cph2010.drupal.org/news/core-developer-summit">Core Developer Summit</a> and the <a href="http://cph2010.drupal.org/chx-coders-lounge">ChX Coder Lounge</a> are held at Republikken.';
  $node->teaser = 'The <a href="http://cph2010.drupal.org/news/core-developer-summit">Core Developer Summit</a> and the <a href="http://cph2010.drupal.org/chx-coders-lounge">ChX Coder Lounge</a> are held at Republikken.';
  $node->field_ol_demo_location = array(
    0 => array(
      'openlayers_wkt' => 'GEOMETRYCOLLECTION(POINT(12.558188437916 55.673047062244))',
    ),
  );
  $results = node_save($node);
  drupal_set_message(t('Republikken node created.'));
  
  // fooBar
  $node = new stdClass();
  $node->type = 'ol_demo_poi';
  $node->uid = 1;
  $node->status = 1;
  $node->title = 'The Australian (Foo)Bar';
  $node->body = 'A bar just for DrupalCon?! How cool is that?';
  $node->teaser = 'A bar just for DrupalCon?! How cool is that?';
  $node->field_ol_demo_location = array(
    0 => array(
      'openlayers_wkt' => 'GEOMETRYCOLLECTION(POINT(12.57023650979 55.677895954772))',
    ),
  );
  $results = node_save($node);
  drupal_set_message(t('fooBar node created.'));
  
  // CPH Airport
  $node = new stdClass();
  $node->type = 'ol_demo_airports';
  $node->uid = 1;
  $node->status = 1;
  $node->title = 'Copenhagen Airport CPH';
  $node->body = 'Terminal 3 is for international arrivals.';
  $node->teaser = 'Terminal 3 is for international arrivals.';
  $node->field_ol_demo_location = array(
    0 => array(
      'openlayers_wkt' => 'GEOMETRYCOLLECTION(POINT(12.655005454527 55.626348383621))',
    ),
  );
  $results = node_save($node);
  drupal_set_message(t('CPH Airport node created.'));
}